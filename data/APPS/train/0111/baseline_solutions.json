[{"code": "import sys\nimport time\nimport itertools\nfrom itertools import accumulate, product, permutations, combinations\nimport collections\nfrom collections import Counter, OrderedDict, deque, defaultdict, ChainMap\nfrom functools import lru_cache\nimport math\nfrom math import sqrt, sin, cos, tan, ceil, fabs, floor, gcd, exp, log, log2\nimport fractions\nfrom typing import List, Tuple\nimport numpy as np\nimport random\nimport heapq\nfrom heapq import *\nstdin = sys.stdin\nstdout = sys.stdout\ndef code():\n\tn, m = map(int, input().split())\n\t\n\tdata = []\n\tfor i in range(n):\n\t\tdata.append(input())\n\t\n\tcount_1 = [0] * n\n\tfor i, d in enumerate(data):\n\t\tcount_1[i] += d.count('1')\n\t\n\tcurrent_max = count_1[0]\n\tcount_1 = [0] * n\n\tfor i in range(1, n):\n\t\tcount_1[i] += count_1[i-1]\n\t\tif count_1[i] > current_max:\n\t\t\tcurrent_max = count_1[i]\n\t\n\toutput = len(data) * (current_max - 1)\n\tfor i in range(0, current_max):\n\t\toutput += min((i + k - 1) * count_1[i] for i in range(0, current_max))\n\tprint(output)\n\t\n", "result": -1}]