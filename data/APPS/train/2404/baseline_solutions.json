[{"code": "import sys\nimport time\nimport itertools\nfrom itertools import accumulate, product, permutations, combinations\nimport collections\nfrom collections import Counter, OrderedDict, deque, defaultdict, ChainMap\nfrom functools import lru_cache\nimport math\nfrom math import sqrt, sin, cos, tan, ceil, fabs, floor, gcd, exp, log, log2\nimport fractions\nfrom typing import List, Tuple\nimport numpy as np\nimport random\nimport heapq\nfrom heapq import *\nstdin = sys.stdin\nstdout = sys.stdout\ndef code():\n\tclass Solution:\n\t\tdef findKthPositive(self, arr: List[int], k: int) -> int:\n\t\t\t\n\t\t\tcounter = set()\n\t\t\tfor i in arr:\n\t\t\t\tcounter.add(i)\n\t\t\t\n\t\t\tresult = []\n\t\t\t\n\t\t\tposition = 1\n\t\t\twhile k > 0:\n\t\t\t\tif position not in counter:\n\t\t\t\t\tk -= 1 \n\t\t\t\tposition += 1\n\t\t\t\t\n\t\t\treturn position - 1\n\t\t\t\t\n\t\t\t\t\n\t\n", "result": true}]